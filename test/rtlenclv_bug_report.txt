Note that source lines are provided on a best-effort basis and may not always be accurate. Typically, the source line that made a usermode access may be the line preceding or following the line that was quoted in the report. The module offsets, however, are always accurate, and can be used as a last resort for investigation.

=================================================================================
Defect #0
=================================================================================

4 usermode accesses in RtlCreateEnclaveReturnFrame -- minkernel\ntos\rtl\rtlenclv.c:77
73:        __try {
74:
75:#if !defined(VSM_ENCLAVE_RUNTIME) && !defined(TRUSTEDAPP_RUNTIME)
76:
77:            ProbeForWriteSmallStructure(StackFrame,     <---- HERE (ntkrnlmp.exe+0x6ffb0c, ntkrnlmp.exe+0x6ffb16, ntkrnlmp.exe+0x6ffb21, ntkrnlmp.exe+0x6ffb2d)
78:                                        sizeof(PENCLAVE_DISPATCH_FRAME),
79:                                        PROBE_ALIGNMENT(PENCLAVE_DISPATCH_FRAME));
80:
81:#endif


=================================================================================
Defect #1
=================================================================================

3 usermode accesses in RtlCreateEnclaveReturnFrame -- minkernel\ntos\rtl\rtlenclv.c:83
79:                                        PROBE_ALIGNMENT(PENCLAVE_DISPATCH_FRAME));
80:
81:#endif
82:
83:            StackFrame->ParameterAddress = (PULONG_PTR)TrapFrame->R9;     <---- HERE (ntkrnlmp.exe+0x6ffb47)
84:            StackFrame->OriginalReturn = (PVOID)TrapFrame->Rip;     <---- HERE (ntkrnlmp.exe+0x6ffb67)
85:            StackFrame->FramePointer = (PVOID)TrapFrame->Rbp;     <---- HERE (ntkrnlmp.exe+0x6ffb83)
86:            TrapFrame->Rsp = (ULONG_PTR)StackFrame;
87:
88:            //
89:            // Push the trap frame's RIP onto the user-mode shadow stack. This


=================================================================================
Defect #2
=================================================================================

Atomic usermode access at RtlPrepareEnclaveCall0x52 -- minkernel\ntos\rtl\rtlenclv.c:250 (ntkrnlmp.exe+0x6ffd0a)
246:        ProbeForWritePointer(StackPointer);
247:
248:#endif
249:
250:        Address = ReadPointerNoFence(StackPointer);     <---- HERE
251:
252:        if ((TrapFrame->SegCs == (KGDT64_R3_CODE | RPL_MASK)) &&
253:            ((Address == CallReturnAddress) || (Address == DispatchReturnAddress))) {
254:

